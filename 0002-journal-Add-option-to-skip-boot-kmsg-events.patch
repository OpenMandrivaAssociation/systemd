diff -up systemd-stable-253/man/journald.conf.xml.13~ systemd-stable-253/man/journald.conf.xml
--- systemd-stable-253/man/journald.conf.xml.13~	2023-02-15 20:11:52.000000000 +0100
+++ systemd-stable-253/man/journald.conf.xml	2023-02-16 11:49:28.387773470 +0100
@@ -438,6 +438,15 @@
       </varlistentry>
 
       <varlistentry>
+        <term><varname>BootKMsg=</varname></term>
+
+        <listitem><para>Takes a boolean value. If enabled <command>systemd-journal</command> processes
+        <filename>/dev/kmsg</filename> messages generated by the kernel before it started. If disabled,
+        those messages are not read and can be obtained by other means, like <command>dmesg</command>.
+        In the default journal namespace this option is enabled by default, it is disabled in all others.</para></listitem>
+      </varlistentry>
+
+      <varlistentry>
         <term><varname>TTYPath=</varname></term>
 
         <listitem><para>Change the console TTY to use if
diff -up systemd-stable-253/src/journal/journald-gperf.gperf.13~ systemd-stable-253/src/journal/journald-gperf.gperf
--- systemd-stable-253/src/journal/journald-gperf.gperf.13~	2023-02-15 20:11:52.000000000 +0100
+++ systemd-stable-253/src/journal/journald-gperf.gperf	2023-02-16 11:49:28.387773470 +0100
@@ -23,6 +23,7 @@ Journal.Storage,            config_parse
 Journal.Compress,           config_parse_compress,   0, offsetof(Server, compress)
 Journal.Seal,               config_parse_bool,       0, offsetof(Server, seal)
 Journal.ReadKMsg,           config_parse_bool,       0, offsetof(Server, read_kmsg)
+Journal.BootKMsg,           config_parse_bool,       0, offsetof(Server, boot_kmsg)
 Journal.Audit,              config_parse_tristate,   0, offsetof(Server, set_audit)
 Journal.SyncIntervalSec,    config_parse_sec,        0, offsetof(Server, sync_interval_usec)
 # The following is a legacy name for compatibility
diff -up systemd-stable-253/src/journal/journald-kmsg.c.13~ systemd-stable-253/src/journal/journald-kmsg.c
--- systemd-stable-253/src/journal/journald-kmsg.c.13~	2023-02-16 11:49:28.388773475 +0100
+++ systemd-stable-253/src/journal/journald-kmsg.c	2023-02-16 11:50:40.626345160 +0100
@@ -397,6 +397,17 @@ int server_open_dev_kmsg(Server *s) {
         if (!s->read_kmsg)
                 return 0;
 
+        if (!s->boot_kmsg) {
+                /* clear out /dev/kmsg, we don't want all its messages */
+                char buffer[40960];
+                while (1) {
+                        int ret;
+                        ret = read(s->dev_kmsg_fd, buffer, 40960);
+                        if (ret <= 0)
+                                break;
+                }
+        }
+
         r = sd_event_add_io(s->event, &s->dev_kmsg_event_source, s->dev_kmsg_fd, EPOLLIN, dispatch_dev_kmsg, s);
         if (r == -EPERM) { /* This will fail with EPERM on older kernels where /dev/kmsg is not readable. */
                 r = 0;
diff -up systemd-stable-253/src/journal/journald-server.c.13~ systemd-stable-253/src/journal/journald-server.c
--- systemd-stable-253/src/journal/journald-server.c.13~	2023-02-16 11:49:28.344773243 +0100
+++ systemd-stable-253/src/journal/journald-server.c	2023-02-16 11:49:28.388773475 +0100
@@ -2403,7 +2403,7 @@ int server_init(Server *s, const char *n
                 return r;
 
         /* By default, only read from /dev/kmsg if are the main namespace */
-        s->read_kmsg = !s->namespace;
+        s->boot_kmsg = s->read_kmsg = !s->namespace;
         s->storage = s->namespace ? STORAGE_PERSISTENT : STORAGE_AUTO;
 
         journal_reset_metrics(&s->system_storage.metrics);
diff -up systemd-stable-253/src/journal/journald-server.h.13~ systemd-stable-253/src/journal/journald-server.h
--- systemd-stable-253/src/journal/journald-server.h.13~	2023-02-15 20:11:52.000000000 +0100
+++ systemd-stable-253/src/journal/journald-server.h	2023-02-16 11:49:28.388773475 +0100
@@ -108,6 +108,7 @@ struct Server {
         JournalCompressOptions compress;
         bool seal;
         bool read_kmsg;
+        bool boot_kmsg;
         int set_audit;
 
         bool forward_to_kmsg;
