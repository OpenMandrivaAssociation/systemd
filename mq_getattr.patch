--- systemd-239/src/libsystemd/sd-daemon/sd-daemon.c~	2018-06-22 11:11:49.000000000 +0000
+++ systemd-239/src/libsystemd/sd-daemon/sd-daemon.c	2019-01-04 15:35:25.727429621 +0000
@@ -403,6 +403,11 @@
         return 1;
 }
 
+static inline mq_getattr(int fd, struct mq_attr *data)
+{
+	return syscall(__NR_mq_getsetattr, fd, NULL, data);
+}
+
 _public_ int sd_is_mq(int fd, const char *path) {
         struct mq_attr attr;
 
--- systemd-239/src/libsystemd/sd-daemon/sd-daemon.c~	2019-01-04 15:35:25.000000000 +0000
+++ systemd-239/src/libsystemd/sd-daemon/sd-daemon.c	2019-01-04 15:39:28.242426245 +0000
@@ -403,7 +403,7 @@
         return 1;
 }
 
-static inline mq_getattr(int fd, struct mq_attr *data)
+static inline mq_getattr_local(int fd, struct mq_attr *data)
 {
 	return syscall(__NR_mq_getsetattr, fd, NULL, data);
 }
@@ -414,7 +414,7 @@
         /* Check that the fd is valid */
         assert_return(fcntl(fd, F_GETFD) >= 0, -errno);
 
-        if (mq_getattr(fd, &attr) < 0) {
+        if (mq_getattr_local(fd, &attr) < 0) {
                 if (errno == EBADF)
                         /* A non-mq fd (or an invalid one, but we ruled that out above) */
                         return 0;
